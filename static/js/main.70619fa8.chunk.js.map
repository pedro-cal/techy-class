{"version":3,"sources":["firebase/firebase.utils.js","components/games/games.js","components/dashboard/dashboard.js","pages/home/home.js","components/tags-input/tags-input.js","components/students-list/students-list.js","components/class-list/class-list.js","pages/students/students-page.js","components/header/header.js","components/projects-list/projects-list.js","components/sign-in/sign-in.js","components/sign-up/sign-up.js","pages/login/login.js","pages/enrollment/enrollment.js","firebase/databaseMethods.js","components/video-card/video-card.js","components/video-rank/video-rank.js","config.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getUserRefFromDB","signedUser","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","userRole","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","Games","history","useHistory","className","onClick","push","Dashboard","props","useState","classes","setClasses","toggleGames","setToggleGames","toggleTeacherInfo","setToggleTeacherInfo","useEffect","currentUser","teachesClasses","students","length","Home","this","React","Component","TagsInput","handleInputChange","e","setState","tagsInputValue","currentTarget","value","pushTagToDB","state","studentId","tagsArray","update","Labels","then","catch","error","handleKeyPress","key","target","tagsInput","removeTag","i","newTags","splice","currentStudent","id","onSnapshot","std","data","type","placeholder","ref","c","onChange","onKeyDown","map","tag","StudentsList","getUpdatedStudents","updatedStudents","showSearchField","searchField","chosenClass","sort","b","filter","student","Class","includes","htmlFor","Number","src","process","alt","FirstName","LastName","updateStudents","ClassList","handleClassClick","firstChild","innerHTML","stdsInClickedClass","filteredStudents","forceUpdate","showStudents","showClassFilter","num","currentClass","totalStudents","forEach","size","StudentsPage","Header","userName","to","credits","signOut","ProjectsList","SignIn","handleChange","name","handleSubmit","preventDefault","password","signInWithEmailAndPassword","onSubmit","SignUp","confirmPassword","alert","createUserWithEmailAndPassword","user","code","showError","errorMessage","LogIn","Enrollment","enrollmentCode","school","class","year","classCode","addVideoLike","videoID","userID","buttonType","toggled","videoRef","collection","likes","FieldValue","arrayRemove","likedBy","opinion","arrayUnion","VideoCard","toggleVideoLikesListener","getVideoLikes","video","videoLikes","getLikeStats","undefined","totalLikes","like","totalDislikes","currentUserLike","paintLikeButtons","likeToggle","dislikeToggle","handleClickDelete","delete","handleClickLike","handleClickDislike","href","videoURL","rel","videoData","snippet","thumbnails","medium","url","title","postedBy","VideoRank","toggleVideoListener","getVideosFromDB","videoList","querySnapshot","addUserNameToVideos","dbVideos","getVideo","videoURLInvalid","fetch","resp","json","items","showPreview","videoIsDuplicate","GetYoutubeId","where","handleSaveVideo","postedAt","operation","number","currentCredits","calc","creditsOperation","videoSaved","setTimeout","getUserByID","userData","videoPosters","handlePressEnter","App","toggleAuthMonitor","showEnrollment","stdsSnapshot","dbStudents","onAuthStateChanged","snapshot","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70619fa8.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB4viqxXXUz96JPMSKv7by8o5hea1ltpVc\",\r\n    authDomain: \"tech-teacher-db.firebaseapp.com\",\r\n    databaseURL: \"https://tech-teacher-db.firebaseio.com\",\r\n    projectId: \"tech-teacher-db\",\r\n    storageBucket: \"tech-teacher-db.appspot.com\",\r\n    messagingSenderId: \"521395870719\",\r\n    appId: \"1:521395870719:web:e282a78b20ffb28f2a25ca\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const getUserRefFromDB = async (signedUser, additionalData) => {\r\n  //The line below was in the course but seems redundant with App.js - AuthMonitor\r\n  /* if (!signedUser) return; */\r\n  //* get signedUser ref and snapshot \r\n  const userRef = firestore.doc(`users/${signedUser.uid}`);\r\n  const userSnapshot = await userRef.get();\r\n\r\n  //* if signedUser is new, send its data to DB \r\n  if(!userSnapshot.exists) {\r\n    const {displayName, email} = signedUser;\r\n    const createdAt = new Date();\r\n    const userRole = '';\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        userRole,\r\n        ...additionalData\r\n      })\r\n    } catch (error) {\r\n      console.log(\"Problem sending User to DB\", error.message)\r\n    }\r\n  }\r\n  return userRef;\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n","import React from 'react';\r\nimport './games.css';\r\n\r\nimport {FaYoutube as YoutubeIcon} from 'react-icons/fa';\r\nimport {FaGraduationCap as ClassesIcon} from 'react-icons/fa';\r\nimport {FaTasks as TasksIcon} from 'react-icons/fa';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Games = () => {    \r\n    \r\n    let history = useHistory();\r\n\r\n    return (\r\n        <div className=\"games-box\">\r\n              \r\n            <div className=\"game-info-box\" onClick={() => history.push('/game-videorank')}>\r\n                <div className=\"dash-icon\"><YoutubeIcon/></div>\r\n                <div className=\"game-title\">Video Ranks</div>\r\n                <div className=\"game-description\">\r\n                    <p>Choose a topic, post a video, vote on videos. Who gets more votes?</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"game-info-box\">\r\n                <div className=\"dash-icon\"><ClassesIcon/></div>\r\n                <div className=\"game-title\">Survey</div>\r\n                <div className=\"game-description\">Classes</div>                                \r\n            </div>\r\n\r\n            <div className=\"game-info-box\">\r\n                <div className=\"dash-icon\"><TasksIcon/></div>\r\n                <div className=\"game-title\">Guess</div>\r\n                <div className=\"game-description\">Pending Tasks</div>                                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './dashboard.css';\r\n\r\nimport {Games} from '../games/games';\r\n\r\nimport {FaGamepad as GamesIcon} from 'react-icons/fa';\r\nimport {FiRadio as LiveIcon} from 'react-icons/fi';\r\nimport {FaGraduationCap as ClassesIcon} from 'react-icons/fa';\r\nimport {FaUsers as StudentsIcon} from 'react-icons/fa';\r\nimport {FaTasks as TasksIcon} from 'react-icons/fa';\r\nimport {FaClipboardCheck as ProjectsIcon} from 'react-icons/fa';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const Dashboard = (props) => {\r\n    const [classes, setClasses] = useState([]);   \r\n    const [toggleGames, setToggleGames] = useState(false);\r\n    const [toggleTeacherInfo, setToggleTeacherInfo] = useState(true);\r\n\r\n    useEffect(() => {\r\n        if (props.currentUser) {\r\n            setClasses(props.currentUser.teachesClasses);            \r\n        }        \r\n    },[props.currentUser]);\r\n\r\n    let history = useHistory();\r\n    return (\r\n        <div className=\"dashboard-box\">\r\n            <div className=\"btn-group\">\r\n                <div className=\"dash-btn-box\">\r\n                    <div className=\"dash-icon\"><LiveIcon/></div>\r\n                    <div className=\"dash-btn-label\">Live</div>\r\n                </div>                \r\n                <div \r\n                    className={toggleGames ? \"dash-btn-box toggle-clicked\" : \"dash-btn-box\"} \r\n                    onClick={() => {\r\n                        setToggleGames(!toggleGames); \r\n                        setToggleTeacherInfo(!toggleTeacherInfo);}}>\r\n                    <div className=\"dash-icon\"><GamesIcon/></div>\r\n                    <div className=\"dash-btn-label\">Games</div>\r\n                </div>                \r\n                <div className=\"dash-btn-box\">\r\n                    <div className=\"dash-icon\"><ProjectsIcon/></div>\r\n                    <div className=\"dash-btn-label\">Projects</div>\r\n                </div>                \r\n            </div>\r\n            \r\n            {toggleGames ? <Games /> : null}\r\n            \r\n            {toggleTeacherInfo ? \r\n            <div className=\"info-boxes-container\">\r\n                <div className=\"dash-info-box\" onClick={() => history.push('/students')}>\r\n                    <div className=\"dash-icon\"><StudentsIcon/></div>\r\n                    <div className=\"dash-big-number\">{props.students.length}</div>\r\n                    <div className=\"dash-info-label\">Students</div>\r\n                </div>\r\n                <div className=\"dash-info-box\">\r\n                    <div className=\"dash-icon\"><ClassesIcon/></div>\r\n                    <div className=\"dash-big-number\">{classes.length}</div>\r\n                    <div className=\"dash-info-label\">Classes</div>                                \r\n                </div>\r\n                <div className=\"dash-info-box\">\r\n                    <div className=\"dash-icon\"><TasksIcon/></div>\r\n                    <div className=\"dash-big-number pending\">8</div>\r\n                    <div className=\"dash-info-label\">Pending Tasks</div>                                \r\n                </div>\r\n            </div> : null}\r\n                    \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Dashboard } from '../../components/dashboard/dashboard';\r\n/* import VideoRank from '../../components/video-link/video-rank'; */\r\nimport './home.css';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);      \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-container\">\r\n                <Dashboard \r\n                    currentUser={this.props.currentUser}\r\n                    students={this.props.students}/>\r\n                {/* <VideoRank currentUser={this.props.currentUser}/> */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {firestore} from '../../firebase/firebase.utils';\r\nimport {MdCancel as DeleteIcon} from 'react-icons/md';\r\nimport \"./tags-input-style.css\";\r\n\r\nclass TagsInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tagsInputValue: \"test results\",\r\n            tagsArray: this.props.currentStudent.Labels,\r\n            students: this.props.students,\r\n            studentId: this.props.currentStudent.id,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let {studentId} = this.state;\r\n        let studentRef = firestore.doc(`students/${studentId}`);\r\n        studentRef.onSnapshot(doc => {\r\n            let std = doc.data();\r\n            this.setState({tagsArray: std.Labels});\r\n        })\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({tagsInputValue: e.currentTarget.value});\r\n   }\r\n\r\n/* \r\n    sendUpdatedStudents = () => {\r\n        this.props.updateStudents(this.state.students);\r\n    } */\r\n\r\n  /*   addTag = (e) => {\r\n        let students = this.state.students;\r\n        let currentStdId = this.state.studentId;\r\n        let currentTags = this.state.tagsArray;\r\n        let inputTag = this.state.tagsInputValue;\r\n        \r\n        this.setState({tagsArray: [...currentTags, inputTag]},\r\n            () => {\r\n                students.map(std => {\r\n                    if (std.id === currentStdId) {\r\n                        std.Labels = this.state.tagsArray;\r\n                    } return students\r\n                });\r\n                this.sendUpdatedStudents();                \r\n            });\r\n        this.tagsInput.value = null;\r\n    } */\r\n\r\n    pushTagToDB = (e) => {\r\n        let {studentId, tagsInputValue, tagsArray} = this.state;\r\n        let studentRef = firestore.doc(`students/${studentId}`);\r\n        studentRef.update({\r\n            Labels: [...tagsArray ,tagsInputValue]\r\n        })\r\n        .then()\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n            this.pushTagToDB();\r\n            this.tagsInput.value = null;\r\n        }\r\n    }\r\n\r\n    removeTag = (i) => {\r\n        let {studentId} = this.state;\r\n        let newTags = [...this.state.tagsArray];\r\n        newTags.splice(i,1);\r\n\r\n        let studentRef = firestore.doc(`students/${studentId}`);        \r\n        studentRef.update({Labels: newTags});         \r\n    }\r\n\r\n    render(){\r\n        let tagsArray = this.state.tagsArray;        \r\n        return(\r\n            <div className=\"tags-input-box\">                \r\n                <input type=\"search\"\r\n                className=\"tags-input\"\r\n                placeholder=\"Press 'Enter' to add tags\"\r\n                ref={c => { this.tagsInput = c}}\r\n                onChange={this.handleInputChange}\r\n                onKeyDown={this.handleKeyPress}/>\r\n                <div className=\"tags-box\">\r\n                    {tagsArray.map((tag,i) => (\r\n                        <div className=\"tag\" key={i}>{tag}\r\n                        <span className=\"tag-delete\"\r\n                        onClick={() => this.removeTag(i)}> \r\n                            <DeleteIcon className=\"tag-delete-icon\"/>\r\n                        </span>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TagsInput;","import React, {Component} from 'react';\r\nimport TagsInput from '../tags-input/tags-input';\r\nimport './students-list-style.css';\r\n\r\nclass StudentsList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n        \r\n    this.state = {\r\n      students: this.props.students,\r\n      showSearchField: this.props.showSearchField,\r\n      searchField: \"\",\r\n      chosenClass: this.props.chosenClass      \r\n    }    \r\n  }\r\n\r\n  getUpdatedStudents = (updatedStudents) => {\r\n    this.setState({students: updatedStudents});\r\n  }\r\n\r\n  /* pushToDB = () => {\r\n    let stds = this.state.students;\r\n    \r\n    try {\r\n      stds.forEach(std => {\r\n        firestore.doc(`students/${std.id}`).set({\r\n          ...std\r\n        })\r\n      })      \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }  */\r\n  \r\n  /* //* Temporary function that allows me to download changes to Students array as a JSON file \r\n  handleDownload = () => {\r\n    const jsonData = this.state.students;\r\n    const fileData = JSON.stringify(jsonData, null, 3);\r\n    const blob = new Blob([fileData], {type: \"text/plain\"});\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.download = 'JSONDownloadTest.json';\r\n    link.href = url;\r\n    link.click();\r\n  } */\r\n  \r\n  render(){\r\n    const students = this.props.students;\r\n    students.sort((a,b) => a.id - b.id);\r\n    console.log(students);\r\n\r\n    let filteredStudents = [];\r\n    if (this.props.chosenClass !== \"\") {\r\n      filteredStudents = students.filter(student => \r\n        student.Class.includes(this.props.chosenClass));\r\n    } else {\r\n      filteredStudents = students.filter(student => \r\n        student.Class.includes(this.state.searchField));\r\n    }\r\n    \r\n    return(\r\n      <div className=\"students-list\">\r\n        {/* INPUT BOX TO FILTER STUDENTS */}        \r\n        <div className=\"class-filter-box\">\r\n          <label htmlFor=\"class-filter\" className=\"basic-label\">\r\n            Filtre os alunos pelo número da turma:\r\n          </label> <br/>\r\n          <input \r\n            type=\"search\" \r\n            id=\"class-filter\"\r\n            placeholder=\"Digite o número da turma\"\r\n            onChange={e => {\r\n              this.setState({searchField: e.currentTarget.value});\r\n            }}\r\n          />\r\n        </div>\r\n\r\n       {/*  <div className=\"push-to-db\" onClick={this.pushToDB}>\r\n            <button type='button'>Push Students to DB</button>\r\n          </div> */}\r\n      \r\n       {/*  <button type=\"button\" \r\n        id=\"download-json\"\r\n        onClick={this.handleDownload}>Download JSON</button> */}\r\n\r\n        {/* LIST OF STUDENTS CARDS */}\r\n        <div className = \"cards-list\">          \r\n          {students.map(student => (                     \r\n            <div key={student.id} className = \"card-box\">\r\n              <div className=\"card-row-main\">\r\n                <div className = \"card-numbers\">\r\n                  <p className = \"card-class\">{student.Class}</p>\r\n                  <p className = \"card-student-number\">#{student.Number}</p>\r\n                </div>\r\n                <div >\r\n                  <img className=\"card-images\" \r\n                  src={process.env.PUBLIC_URL + `/images/${student.Class}-${student.Number}.jpg`} \r\n                  alt=\"\"/>\r\n                </div>\r\n                <div className = \"card-names\">\r\n                  <h3>{student.FirstName}</h3>\r\n                  <p className = \"card-last-name\">{student.LastName}</p>\r\n                </div>         \r\n              </div>\r\n              <div className=\"card-row-tags\">\r\n                <TagsInput currentStudent={student} \r\n                students={this.state.students}\r\n                updateStudents = {this.getUpdatedStudents}/>\r\n              </div>                 \r\n            </div>        \r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StudentsList;","import React, {Component} from 'react';\r\nimport StudentsList from '../students-list/students-list';\r\nimport './class-list-style.css';\r\n\r\nimport {FaUserAlt as StudentIcon} from 'react-icons/fa';\r\n\r\nclass ClassList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes: this.props.classes,\r\n            students: this.props.students,\r\n            filteredStudents: [],\r\n            chosenClass: \"\",\r\n            showStudents: false,\r\n            showClassFilter: false\r\n        }\r\n    }\r\n\r\n  /*   storeFilteredStudents = () => {\r\n        var stdsInClickedClass = [];\r\n        this.state.students.map(student => {            \r\n            if (student.Class === this.state.chosenClass) {\r\n                stdsInClickedClass.push(student);\r\n            } return stdsInClickedClass;\r\n        }); return stdsInClickedClass\r\n        this.setState({filteredStudents: stdsInClickedClass});\r\n\r\n                       \r\n    }; */\r\n\r\n    handleClassClick = (e) => {\r\n        this.setState({chosenClass: e.currentTarget.firstChild.innerHTML},\r\n        () => {\r\n            var stdsInClickedClass = this.state.students.filter(student => {            \r\n                if (student.Class === this.state.chosenClass) {\r\n                    return student;\r\n                } return stdsInClickedClass\r\n            });\r\n            console.log(stdsInClickedClass[0].Class)\r\n            this.setState({filteredStudents: stdsInClickedClass}, () => \r\n            console.log(\"settei filteredStudents\"));\r\n            this.forceUpdate();\r\n            });\r\n    };\r\n\r\n    render(){                \r\n        const classes = this.state.classes;\r\n        const students = this.state.students;\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"class-list\">\r\n                {classes.map((num,i) => {\r\n                    let currentClass = num;\r\n                    let totalStudents = 0;                    \r\n                   return(                    \r\n                    <div className=\"class-card\" \r\n                        key={i}\r\n                        onClick={this.handleClassClick}                   \r\n                    >\r\n                        <div className=\"class-number\">\r\n                            {currentClass}                            \r\n                        </div>\r\n                        <hr/>                        \r\n                        <div className=\"total-students\">\r\n                            {students.forEach((std) => {\r\n                                if (std.Class === currentClass){\r\n                                    totalStudents++;\r\n                                }\r\n                            })}<StudentIcon size={12}/> {totalStudents}\r\n                        </div>                 \r\n                    </div>\r\n                   )\r\n                })}\r\n                </div>\r\n                <div className=\"child-components-box\">\r\n                    \r\n                    {console.log(\"Post-click state.filteredStudents: \"\r\n                     + this.state.filteredStudents)}\r\n\r\n                    {\r\n                        this.state.chosenClass !== \"\" ?\r\n                    <StudentsList students={this.state.students}\r\n                        showClassFilter={this.state.showClassFilter}\r\n                        chosenClass={this.state.chosenClass}/> : null\r\n                    }\r\n                        \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassList;","import React from 'react';\r\nimport StudentsList from '../../components/students-list/students-list';\r\n\r\nexport const StudentsPage = (props) => {\r\n    return (\r\n        <StudentsList students={props.students} />\r\n    );\r\n}","import React, {useState} from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport './header.css';\r\n\r\n//* IMPORTING ICONS \r\nimport {FaSignOutAlt as SignOutIcon} from 'react-icons/fa' ;\r\nimport {FaHome as HomeIcon} from 'react-icons/fa' ;\r\nimport {FaCoins as DollarIcon} from 'react-icons/fa';\r\n\r\nimport { auth } from '../../firebase/firebase.utils';\r\n\r\nexport const Header = (props) => {\r\n    const [ currentUser ] = useState(props.currentUser);\r\n\r\n    let history = useHistory();\r\n\r\n    const handleSignOut = () => {\r\n        auth.signOut();\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    let userName;      \r\n    if(currentUser !== null) {\r\n        userName = currentUser.displayName;\r\n        history.push(\"/home\");\r\n    }\r\n    \r\n    return(                            \r\n        <div className=\"header-box\">\r\n            {currentUser === null ? \r\n            <Redirect to=\"/login\"/> : null}\r\n            <div className=\"header-logo\">Techy Class</div>\r\n            <div className=\"burger-menu\">\r\n                <div className=\"one\"></div>\r\n                <div className=\"two\"></div>\r\n                <div className=\"three\"></div>\r\n            </div>\r\n\r\n            <div className=\"nav-user-box\">\r\n                <nav className=\"nav-box\">\r\n                    <Link className=\"menu-box\" to=\"/home\">\r\n                        <div className=\"icon-box\"><HomeIcon /></div>\r\n                        <span className=\"menu-item\">Home</span>\r\n                    </Link>                        \r\n                </nav>\r\n\r\n                <div className=\"sign-in-menu\">\r\n                {currentUser ?                         \r\n                    <div className=\"user-menu-box\">\r\n                        <span>\r\n                            {userName}\r\n                            {currentUser.userRole === 'student' ? \r\n                            <span className=\"credits\">\r\n                                <DollarIcon/>                                    \r\n                                <span>{currentUser.credits}</span>\r\n                            </span>                      \r\n                            :null} \r\n                        </span>\r\n                        <div className=\"sign-out-box\" onClick={() => handleSignOut()}>\r\n                            <span id=\"sign-out-text\">Sign Out</span>\r\n                            <SignOutIcon/>\r\n                        </div>\r\n                    </div> : null\r\n                }                                                              \r\n                </div>\r\n            </div>\r\n        </div>            \r\n    )\r\n}\r\n\r\n\r\n\r\n/*\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: this.props.currentUser\r\n        }\r\n    }\r\n\r\n    handleSignOut = () => {\r\n        auth.signOut();\r\n        useHistory().push(\"/login\");\r\n    }\r\n\r\n    render() {\r\n        var user = this.props.currentUser;        \r\n        var userName;      \r\n        if(user !== null) {\r\n            userName = user.displayName;             \r\n        }\r\n        \r\n        return(                            \r\n            <div className=\"header-box\">\r\n\r\n                {this.state.currentUser === null ? \r\n                <Redirect to=\"/login\"/> : null}\r\n                <div className=\"header-logo\">Techy Class</div>\r\n                <div className=\"burger-menu\">\r\n                    <div className=\"one\"></div>\r\n                    <div className=\"two\"></div>\r\n                    <div className=\"three\"></div>\r\n                </div>\r\n                <div className=\"nav-user-box\">\r\n\r\n                    <nav className=\"nav-box\">\r\n                        <Link className=\"menu-box\" to=\"/home\">\r\n                            <div className=\"icon-box\"><HomeIcon /></div>\r\n                            <span className=\"menu-item\">Home</span>\r\n                        </Link>                                            \r\n                    </nav>\r\n\r\n                    <div className=\"sign-in-menu\">\r\n                    {this.props.currentUser ?                         \r\n                        <div className=\"user-menu-box\">\r\n                            <span>\r\n                                {userName}\r\n                                {this.props.currentUser.userRole === 'student' ? \r\n                                <span className=\"credits\">\r\n                                    <DollarIcon/>                                    \r\n                                    <span>{this.props.currentUser.credits}</span>\r\n                                </span>                      \r\n                                :null} \r\n                            </span>\r\n                            <div className=\"sign-out-box\" onClick={this.handleSignOut}>\r\n                                <span id=\"sign-out-text\">Sign Out</span>\r\n                                <SignOutIcon/>\r\n                            </div>\r\n                        </div> : null\r\n                    }                                                              \r\n                    </div>\r\n                </div>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header; */","import React from 'react';\r\nimport './projects-list.css';\r\n\r\nimport {FaPlus as AddIcon} from 'react-icons/fa';\r\n\r\nclass ProjectsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card-list\">\r\n                    <div className=\"card\">\r\n                        <span className=\"icon\"><AddIcon /></span>\r\n                        <p className=\"card-title\">Add Project</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectsList;","import React from 'react';\r\nimport './sign-in.css';\r\n\r\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utils';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',            \r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {name,value} = e.target;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {email,password} = this.state;\r\n\r\n        await auth.signInWithEmailAndPassword(email,password);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"sign-in-container\">                    \r\n                <div className=\"sign-form-box\">\r\n                    <h2 className=\"sign-subtitle\">Sign In</h2>\r\n                    <form className=\"sign-in-form\" onSubmit={this.handleSubmit} >\r\n                        <div className=\"input-container\">                                \r\n                            <input \r\n                                type=\"email\" \r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleChange}\r\n                                className=\"sign-in-input\"\r\n                                placeholder=\"bla\"\r\n                            />\r\n                            <label className=\"input-label\" htmlFor=\"email\">your email</label>\r\n                        </div>\r\n                        <div className=\"input-container\">\r\n                            <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"password\">your password</label>\r\n                        </div>\r\n                        <button className=\"sign-in-btn\">Sign In</button>\r\n                        <img alt=\"Sign In Wigh Google\" \r\n                        src={process.env.PUBLIC_URL + '/images/google-sign-in/btn_google_signin_dark_normal_web2x.png'}\r\n                        id=\"google-sign-in-btn\"\r\n                        onClick={signInWithGoogle}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './sign-up.css';\r\n\r\nimport {auth, getUserRefFromDB} from '../../firebase/firebase.utils';\r\n\r\nclass SignUp extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            showError: false,\r\n            errorMessage: '',\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const{name,value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {displayName,email,password,confirmPassword} = this.state;\r\n\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match. Try again!')\r\n            return;\r\n        }\r\n        if (this.state.password.length < 6) {\r\n            alert('Password should have at least 6 characters')\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const {user} = await auth.createUserWithEmailAndPassword(email,password);            \r\n\r\n            await getUserRefFromDB(user,{displayName});\r\n        } catch (error) {\r\n            console.error(error);\r\n            if(error.code === 'auth/email-already-in-use') {\r\n                this.setState({showError: true,errorMessage:'Email already used. Try to sign in.'})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"sign-up-container\">                    \r\n                <div className=\"sign-form-box\">\r\n                    <h2 className=\"sign-subtitle\">Create a new account</h2>\r\n                    {this.state.showError ? <p className=\"error-message\">{this.state.errorMessage}</p>\r\n                    :null}\r\n                    <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"input-container\">                                \r\n                            <input type=\"text\" \r\n                            name=\"displayName\" \r\n                            value={this.state.displayName}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"displayName\">your user name</label>\r\n                        </div>\r\n                        <div className=\"input-container\">                                \r\n                            <input type=\"email\" \r\n                            name=\"email\" \r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"email\">your email</label>\r\n                        </div>                                \r\n                        <div className=\"input-container\">\r\n                            <input type=\"password\" \r\n                            name=\"password\"\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"password\">create a password</label>\r\n                        </div>\r\n                        <div className=\"input-container\">\r\n                            <input type=\"password\" \r\n                            name=\"confirmPassword\"\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"confirm-password\">confirm password</label>\r\n                        </div>\r\n                        <button className=\"sign-in-btn\" >Create Account</button>\r\n                    </form>                   \r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport './login.css';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in';\r\nimport SignUp from '../../components/sign-up/sign-up';\r\n\r\nexport const LogIn = () => (            \r\n            <div className=\"login-container\">                \r\n                <div className=\"logo\">Techy Class</div>\r\n                <div className=\"sign-in-up-container\">\r\n                    <SignIn />\r\n                    <hr className='form-divider'/>\r\n                    <SignUp />\r\n                </div>                                                              \r\n            </div>            \r\n    )\r\n","import React from 'react';\r\nimport './enrollment.css';\r\n\r\nimport {firestore} from '../../firebase/firebase.utils';\r\n\r\nclass Enrollment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            enrollmentCode: \"\",\r\n            currentUser: this.props.currentUser\r\n        }        \r\n    }\r\n   \r\n    handleChange = (e) => {\r\n        this.setState({enrollmentCode: e.target.value},\r\n            ()=>console.log(this.state.enrollmentCode));\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {enrollmentCode,currentUser} = this.state;\r\n        const userRef = firestore.doc(`users/${currentUser.id}`);\r\n        switch(enrollmentCode) {\r\n            case 'emc2020901':\r\n                //case 1\r\n                userRef.update({                    \r\n                    userRole: 'student',\r\n                    credits: 10,\r\n                    school: 'EMC',\r\n                    class: {year: '2020', classCode: '901'}\r\n                })\r\n                .then(() => console.log('User Successfully Enrolled!'))\r\n                .catch(error => console.error(error));\r\n                break;\r\n            case 'emc2020902':\r\n                //case 2\r\n                userRef.update({                    \r\n                    userRole: 'student',\r\n                    credits: 10,\r\n                    school: 'EMC',\r\n                    class: {year: '2020', classCode: '902'}\r\n                })\r\n                .then(() => console.log('User Successfully Enrolled!'))\r\n                .catch(error => console.error(error));\r\n                break;\r\n            default: alert('Code is invalid!');\r\n        }\r\n    }\r\n\r\n    render() {        \r\n        return(\r\n            <div className=\"enrollment-box\">\r\n                <h2 className=\"subtitle\">Type your Enrollment Code:</h2>\r\n                <div className=\"input-container\">                                \r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"enrollmentCode\"\r\n                        value={this.state.enrollmentCode}\r\n                        onChange={this.handleChange}\r\n                        className=\"enrollment-input\"\r\n                        placeholder=\"bla\"\r\n                    />\r\n                    <label className=\"enrollment-label\" htmlFor=\"email\">your code</label>\r\n                </div>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"submit-btn\"\r\n                    onClick={this.handleSubmit}\r\n                > Submit Code</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Enrollment;","import {firestore} from './firebase.utils';\r\nimport * as firebase from 'firebase';\r\n\r\n//* A function to perform credits operations \r\nexport const creditsOperation = (userID, operation, number) => {\r\n    const userRef = firestore.collection('users').doc(userID);\r\n    var currentCredits, calc;\r\n    userRef.get().then((doc) => {\r\n        if (doc.exists) {\r\n            currentCredits = doc.data().credits;\r\n            console.log('currentCredits = ', currentCredits);\r\n        }})\r\n        .then(() => {\r\n            switch (operation) {\r\n                case 'add':\r\n                    calc = currentCredits + number;\r\n                    userRef.update({credits: calc});\r\n                    break;\r\n                \r\n                case 'remove':\r\n                    calc = currentCredits - number;\r\n                    console.log('calc after remove operation = ',calc);\r\n                    userRef.update({credits: calc});\r\n                    break;\r\n                default: calc = 0;\r\n            }\r\n        })\r\n}\r\n\r\n//* A function to get a user's data based on their userID \r\nexport const getUserByID = (userID) => {\r\n    console.log('getUserByID activated');\r\n    let userData;\r\n    firestore.collection('users').doc(userID).get()\r\n        .then(doc => {\r\n            if (doc.exists) {                \r\n                userData = doc.data();\r\n                console.log('User data retrieved from Db = ',userData);\r\n            }\r\n        })\r\n    return userData.displayName;\r\n}\r\n\r\n//* A function to manage liking and disliking shared videos \r\nexport const addVideoLike = (videoID, userID, buttonType, toggled) => {\r\n    const videoRef = firestore.collection('videos').doc(videoID);\r\n    \r\n    const switchToLike = () => {\r\n        videoRef.update({\r\n            likes: firebase.firestore.FieldValue.arrayRemove(\r\n                {likedBy: userID, opinion: 'dislike'}                \r\n            )\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayRemove(\r\n                    {likedBy: userID, opinion: ''}                \r\n                )\r\n            })\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayUnion(\r\n                    {likedBy: userID, opinion: 'like'}\r\n                )\r\n            })\r\n        })\r\n        .catch(error => console.error(\"error liking video: \", error));\r\n    }\r\n\r\n    const switchToUnlike = () => {\r\n        videoRef.update({\r\n            likes: firebase.firestore.FieldValue.arrayRemove(\r\n                {likedBy: userID, opinion: 'dislike'}                \r\n            )\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayRemove(\r\n                    {likedBy: userID, opinion: 'like'}                \r\n                )\r\n            })\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayUnion(\r\n                    {likedBy: userID, opinion: ''}\r\n                )\r\n            })\r\n        })\r\n        .catch(error => console.error(\"error unliking video: \", error));\r\n    }\r\n\r\n    const switchToDislike = () => {\r\n        videoRef.update({\r\n            likes: firebase.firestore.FieldValue.arrayRemove(\r\n                {likedBy: userID, opinion: 'like'}                \r\n            )\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayRemove(\r\n                    {likedBy: userID, opinion: ''}                \r\n                )\r\n            })\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayUnion(\r\n                    {likedBy: userID, opinion: 'dislike'}\r\n                )\r\n            })\r\n        })\r\n        .catch(error => console.error(\"error disliking video: \", error));\r\n    }\r\n\r\n    const switchToUndislike = () => {\r\n        videoRef.update({\r\n            likes: firebase.firestore.FieldValue.arrayRemove(\r\n                {likedBy: userID, opinion: 'like'}                \r\n            )\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayRemove(\r\n                    {likedBy: userID, opinion: 'dislike'}                \r\n                )\r\n            })\r\n        })\r\n        .then(() => {\r\n            videoRef.update({\r\n                likes: firebase.firestore.FieldValue.arrayUnion(\r\n                    {likedBy: userID, opinion: ''}\r\n                )\r\n            })\r\n        })\r\n        .catch(error => console.error(\"error undisliking video: \", error));\r\n    }\r\n\r\n    if (buttonType === 'like' && toggled === false) {\r\n        switchToLike();\r\n    } else if (buttonType === 'like' && toggled === true) {\r\n        switchToUnlike();\r\n    } else if (buttonType === 'dislike' && toggled === false) {\r\n        switchToDislike();\r\n    } else if (buttonType === 'dislike' && toggled === true) {\r\n        switchToUndislike();\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport './video-card.css';\r\n\r\nimport {addVideoLike} from '../../firebase/databaseMethods';\r\nimport {firestore} from '../../firebase/firebase.utils';\r\n\r\nimport {FaThumbsUp as LikeIcon} from 'react-icons/fa';\r\nimport {FaThumbsDown as DislikeIcon} from 'react-icons/fa';\r\nimport {FaTrash as TrashIcon} from 'react-icons/fa';\r\n\r\nclass VideoCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            likeToggle: false,\r\n            dislikeToggle: false,\r\n            videoLikes: [],\r\n            totalLikes: 0,\r\n            totalDislikes: 0,\r\n            currentUserLike: []\r\n        }        \r\n    }\r\n\r\n    toggleVideoLikesListener = null;\r\n\r\n    componentDidMount() {\r\n        this.getVideoLikes();        \r\n\r\n        this.toggleVideoLikesListener = firestore.collection('videos').doc(this.props.video.videoID)\r\n            .onSnapshot(() => {\r\n                this.getVideoLikes();                \r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.toggleVideoLikesListener();\r\n    }\r\n\r\n    getVideoLikes = () => {\r\n        const videoRef = firestore.collection('videos').doc(this.props.video.videoID);        \r\n\r\n        videoRef.get()\r\n            .then(doc => {\r\n                if(doc.exists){\r\n                    this.setState({videoLikes: doc.data().likes},\r\n                    () => {\r\n                        this.getLikeStats();\r\n                    });\r\n                }\r\n            })\r\n    }\r\n\r\n    getLikeStats = () => {        \r\n        const {videoLikes} = this.state;\r\n        const currentUser = this.props.currentUser;\r\n        \r\n        if (videoLikes !== undefined) {\r\n            let totalLikes = videoLikes.filter(like => like.opinion === 'like').length;\r\n            let totalDislikes = videoLikes.filter(like => like.opinion === 'dislike').length;\r\n            let currentUserLike = videoLikes.filter(like => like.likedBy === currentUser.id);\r\n\r\n            this.setState({\r\n                totalLikes: totalLikes, \r\n                totalDislikes: totalDislikes, \r\n                currentUserLike: currentUserLike[0]\r\n            },\r\n            () => {\r\n                this.paintLikeButtons();\r\n                console.log(\"State after getVideoLikes: \", this.state);\r\n            });\r\n        }        \r\n    }\r\n\r\n    paintLikeButtons = () => {\r\n        const {currentUserLike} = this.state;\r\n\r\n        if (currentUserLike !== undefined && currentUserLike.opinion === 'like') {\r\n            this.setState({likeToggle: true, dislikeToggle: false})\r\n        } else if (currentUserLike !== undefined && currentUserLike.opinion === 'dislike') {\r\n            this.setState({likeToggle: false, dislikeToggle: true})\r\n        }\r\n    }\r\n\r\n    handleClickDelete = (videoID) => {\r\n        firestore.collection('videos').doc(videoID).delete()\r\n          .catch(error => console.error(error));\r\n    }\r\n\r\n    handleClickLike = (videoID, userID) => {\r\n        const likeToggle = this.state.likeToggle;\r\n\r\n        this.setState({likeToggle: !likeToggle, dislikeToggle: false}, () => {            \r\n            addVideoLike(videoID, userID, 'like', likeToggle);\r\n        });\r\n    }\r\n\r\n    handleClickDislike = (videoID, userID) => {\r\n        const dislikeToggle = this.state.dislikeToggle;\r\n        this.setState({dislikeToggle: !dislikeToggle, likeToggle: false}, () => {            \r\n            addVideoLike(videoID, userID, 'dislike', dislikeToggle);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const video = this.props.video;\r\n        const videoID = video.videoID;\r\n        const currentUser = this.props.currentUser;\r\n        const {likeToggle,dislikeToggle,totalLikes,totalDislikes} = this.state;             \r\n\r\n        return (\r\n            <div className=\"video-card\" key={videoID}>                \r\n                <a href={video.videoURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <img src={video.videoData.snippet.thumbnails.medium.url} \r\n                    alt=\"\"\r\n                    className=\"video-thumb\"\r\n                    />                  \r\n                </a> \r\n\r\n                <div className=\"video-text\">\r\n                    <span className=\"video-title\">{video.videoData.snippet.title}</span>\r\n                                    \r\n                    <div className=\"video-buttons\">\r\n                    <span \r\n                        className={likeToggle ? \"video-icon like-icon toggled\" : \"video-icon like-icon\"}\r\n                        onClick={() => this.handleClickLike(videoID, currentUser.id)} >\r\n                        <LikeIcon />\r\n                    </span>\r\n                    <span className=\"video-stats\">                    \r\n                        {totalLikes ? totalLikes : 0}\r\n                    </span>\r\n                    <span \r\n                        className={dislikeToggle ? \"video-icon like-icon toggled\" : \"video-icon like-icon\"}\r\n                        onClick={() => this.handleClickDislike(videoID, currentUser.id)} >\r\n                        <DislikeIcon />\r\n                    </span>\r\n                    <span className=\"video-stats\">\r\n                        {totalDislikes ? totalDislikes : 0}\r\n                    </span>\r\n                    <span className=\"video-label\">                      \r\n                        {video.postedBy}               \r\n                    </span>\r\n                    <span className=\"video-icon\">\r\n                        {currentUser !== null && video.userID === currentUser.id ? \r\n                        <TrashIcon onClick={() => this.handleClickDelete(videoID)}/> : null }\r\n                    </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VideoCard;","import React from 'react';\r\nimport './video-rank.css';\r\nimport VideoCard from '../video-card/video-card';\r\nimport {firestore} from '../../firebase/firebase.utils';\r\nimport {creditsOperation} from '../../firebase/databaseMethods';\r\n\r\nimport {youtubeKey} from '../../config';\r\nimport GetYoutubeId from 'get-youtube-id';\r\nimport {FaCheck as SaveIcon} from 'react-icons/fa';\r\nimport {FaCoins as DollarIcon} from 'react-icons/fa';\r\n\r\n\r\n//* CLASS COMPONENT DECLARATION \r\n//* Expected Props: currentUser \r\nclass VideoRank extends React.Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      videoURL: \"\",\r\n      videoID: '',\r\n      videoURLInvalid: false,\r\n      videoIsDuplicate: false,\r\n      video: null,\r\n      videoSaved: false,\r\n      showPreview: false,\r\n      videoList: null,\r\n      videoPosters: []\r\n    }    \r\n  }\r\n\r\n  toggleVideoListener = null;\r\n\r\n  //* GET ALL VIDEOS POSTED ON FIREBASE \r\n  getVideosFromDB = () => {\r\n    var videoList = [];\r\n    //* Get stored videos from DB \r\n    firestore.collection('videos').get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          //* pushing videos from DB into array variable \r\n          videoList.push(doc.data());          \r\n        })\r\n      })      \r\n      .then(()=>{        \r\n        this.setState({videoList: videoList},\r\n          () => this.addUserNameToVideos());\r\n      })\r\n      .catch(error => console.error(error)); \r\n  }\r\n\r\n  //* ADD USER NAMES TO VIDEO LIST \r\n  addUserNameToVideos = () => {\r\n    let dbVideos = this.state.videoList;    \r\n    dbVideos.forEach(video => {\r\n      firestore.collection('users').doc(video.userID).get()\r\n            .then(doc => {\r\n              video.postedBy = doc.data().displayName;\r\n            })\r\n            .then(() => {\r\n              this.setState({videoList: dbVideos});\r\n            })\r\n    });\r\n  }  \r\n  \r\n  //* MONITOR FIREBASE VIDEOS COLLECTION \r\n  componentDidMount() {\r\n    this.getVideosFromDB();\r\n\r\n    //* Toggle monitor on Firestore video collection \r\n    this.toggleVideoListener = firestore.collection('videos')\r\n          .onSnapshot(() => this.getVideosFromDB());\r\n  }\r\n  componentWillUnmount() {\r\n    this.toggleVideoListener();\r\n  }\r\n\r\n  //* GET YOUTUBE ID \r\n  getVideo = (videoID) => {    \r\n    if (this.state.videoURLInvalid === false) {\r\n      fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoID}&key=${youtubeKey}`)\r\n        .then(resp => resp.json())\r\n        .then((resp) => {\r\n          this.setState({video: resp.items[0], showPreview: true});\r\n        })        \r\n        .catch(error => console.error(error));\r\n    }      \r\n  } \r\n\r\n  //* VIDEO URL INPUT - handle change and Enter keydown \r\n  handleChange = (e) => {    \r\n    this.setState({videoURL: e.target.value, videoIsDuplicate: false},\r\n      () => {\r\n        const videoID = GetYoutubeId(this.state.videoURL);\r\n        console.log(\"videoID after input change: \", videoID);\r\n      \r\n        //* Validating URL and Get Video Preview \r\n        if (videoID !== null) {      \r\n          this.setState({videoURLInvalid: false, videoID: videoID},\r\n            async () => {\r\n              console.log('videoID in state after validation: ', this.state.videoID);\r\n              //* Checking for duplicate videos \r\n              await firestore.collection('videos').where('videoID', '==', this.state.videoID)\r\n                .get()\r\n                .then((querySnapshot) => {                  \r\n                  querySnapshot.forEach(doc => {\r\n                    if (doc.data().videoID === this.state.videoID) {\r\n                      this.setState({videoIsDuplicate: true});\r\n                    }\r\n                  })                                      \r\n                });\r\n                //* Getting video preview after duplicate checking \r\n                if (!this.state.videoIsDuplicate) {\r\n                  this.getVideo(videoID);\r\n                }\r\n            });        \r\n        } else {\r\n        //* Video URL is invalid \r\n          this.setState({videoURLInvalid: true, showPreview: false});\r\n        }\r\n      });\r\n      \r\n  }  \r\n\r\n  //* SAVE VIDEO TO DB \r\n  handleSaveVideo = () => {\r\n    const postedAt = new Date();\r\n    firestore.collection(\"videos\").doc(this.state.videoID).set({\r\n      userID: this.props.currentUser.id,\r\n      videoURL: this.state.videoURL,\r\n      videoID: this.state.videoID,\r\n      postedAt: postedAt,\r\n      videoData: this.state.video\r\n    })\r\n    .then(() => {\r\n      //* Take 1 credit off of the user \r\n      /* creditsOperation(this.props.currentUser.id, 'remove', 1); */\r\n      creditsOperation(this.props.currentUser.id,'remove',1);\r\n\r\n      //* Inform success, then reset state \r\n      this.setState({videoSaved: true});\r\n      setTimeout(() => this.setState({videoSaved: false, showPreview: false, videoURL:'', video: null}), 5000);      \r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error adding video: \", error);\r\n    });\r\n  }  \r\n\r\n  getUserByID = (userID) => {\r\n    console.log('getUserByID activated');\r\n    var userData;    \r\n    firestore.collection('users').doc(userID).get()\r\n        .then(doc => {\r\n            if (doc.exists) {                \r\n                userData = doc.data();\r\n              }\r\n        })\r\n        .then(() => {\r\n          this.setState({videoPosters:[\r\n            { userID: userID,\r\n              userName: userData.displayName }\r\n          ]}, () => console.log(this.state.videoPosters))\r\n        })\r\n}  \r\n\r\n  render() {   \r\n    var {videoList} = this.state;    \r\n    const currentUser = this.props.currentUser;\r\n    \r\n    return(\r\n      <div className=\"video-box\">\r\n        <h1>Video Ranks</h1>\r\n\r\n        {/* //* VIDEO URL INPUT FIELD */}\r\n        <div className=\"input-box\">                                \r\n          <input type=\"search\" \r\n          name=\"videoURL\" \r\n          value={this.state.videoURL}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handlePressEnter}\r\n          className=\"animated-input\"\r\n          placeholder=\"bla\"/>\r\n          <label className=\"animated-label\" htmlFor=\"videoURL\">Enter Youtube URL</label>\r\n          {/* <button className=\"search-button\" onClick={this.handleSearchClick}><SearchIcon/></button> */}\r\n        </div>      \r\n\r\n        {/*//* VIDEO POSTING BOX */}\r\n\r\n        {/* //* Video Save Confirmation*/}\r\n        {this.state.videoURL && this.state.showPreview ?        \r\n          <div className=\"video-preview\">     \r\n            <img src={this.state.video.snippet.thumbnails.medium.url}\r\n              alt=\"\"\r\n              className=\"video-thumb\"\r\n            />\r\n            <span className=\"preview-title\">Post this video?</span>            \r\n            <h4 className=\"video-title\">{this.state.video.snippet.title}</h4>\r\n            <span onClick={this.handleSaveVideo} className=\"save-icon\">\r\n              {!this.state.videoSaved ? <SaveIcon /> : null}\r\n            </span>\r\n            <span className=\"credits\">\r\n                <DollarIcon/>                                    \r\n                <span>-1</span>\r\n            </span>\r\n          </div>        \r\n        : null}\r\n        \r\n        {/* //* VALIDATION METHODS */}\r\n        {this.state.videoURLInvalid ?\r\n        <div className=\"error-message\">Please paste a valid Youtube Link</div> : null}\r\n\r\n        {this.state.videoIsDuplicate ?\r\n        <div className=\"error-message\">Video already posted. Choose another one.</div> : null}\r\n\r\n        {this.state.videoSaved ?\r\n        <div className=\"success-message\">Video Posted</div> : null}\r\n        \r\n        {/* //* LIST DB VIDEOS */}\r\n        {this.state.videoList !== null ? \r\n          <div className=\"video-card-box\">\r\n            {videoList.map((video) => {\r\n              return (\r\n                <VideoCard video={video} currentUser={currentUser} key={video.videoID}/>\r\n              );\r\n            })}\r\n          </div> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoRank;","export const youtubeKey = 'AIzaSyCKKT39Cj300mdznNcTRtDnNwPW3fimUR8';","import React, { Component } from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {auth, firestore, getUserRefFromDB} from './firebase/firebase.utils';\nimport './App.css';\n\n//*IMPORTING COMPONENTS \nimport Home from './pages/home/home';\nimport ClassList from './components/class-list/class-list';\nimport {StudentsPage} from './pages/students/students-page';\nimport {Header} from './components/header/header';\nimport ProjectsList from './components/projects-list/projects-list';\nimport {LogIn} from './pages/login/login';\nimport Enrollment from './pages/enrollment/enrollment';\nimport { VideoRankGame } from './pages/video-rank-game/video-rank-game';\nimport VideoRank from './components/video-rank/video-rank';\n\n//* DEFINING APP CLASS \nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      students: [],\n      classes: [],\n      currentUser: null,\n      userRole: null,\n      showEnrollment: false    \n    };    \n  }\n  toggleAuthMonitor = null;\n\n  componentDidMount() {\n        \n    //* GETTING STUDENTS COLLECTION FROM FIRESTORE \n    firestore.collection('students')\n      .get()\n      .then(stdsSnapshot => {\n        const dbStudents = [];\n        stdsSnapshot.forEach(doc => {\n          dbStudents.push(doc.data());          \n        })\n        this.setState({students: dbStudents})\n      });\n\n    //* listen to Auth changes \n    this.toggleAuthMonitor = auth.onAuthStateChanged(async signedUser => {      \n\n      if (signedUser) {        \n        //* 1) send signed user to DB (if it's not there) and get its ref \n        const userRef = await getUserRefFromDB(signedUser);\n\n        //* 2) setState at currentUser as DB data on signedUser \n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            currentUser: {\n              id: snapshot.id,\n              ...snapshot.data()\n            }\n          }, () => {\n            this.setState({userRole: this.state.currentUser.userRole});            \n          })\n        });\n                \n      } else {\n        this.setState({currentUser: signedUser});\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.toggleAuthMonitor();\n  } \n\n  render() {\n    let {currentUser,userRole} = this.state;\n    let state = this.state;\n    return (\n      <div className=\"App\">\n        {currentUser !== null ?        \n          <Header currentUser={currentUser}/>\n          : null\n        }\n\n        <div className = \"main-container\">          \n          {userRole === '' && userRole !== null ? \n            <Enrollment currentUser={currentUser}/> : null\n          }\n          \n          <Switch>            \n            <Route \n              exact path=\"/login\"              \n              component={LogIn}\n              render={props => currentUser ? <Redirect to=\"/home\"/> : null}\n            />\n            <Route \n              exact path={process.env.PUBLIC_URL}\n              render={props => currentUser ? <Home {...state}/> : <Redirect to=\"/login\"/>}\n            />\n            <Route \n              exact path=\"/home\"\n              render={props => currentUser ? <Home {...state}/> : <Redirect to=\"/login\"/>}\n            />\n            <Route \n              exact path=\"/classes\"\n              render={(props) => (\n                <ClassList {...state}/>\n              )}\n            />\n            <Route \n              exact path=\"/students\" \n              render={(props) => (\n                <StudentsPage {...state} chosenClass={\"\"}/>\n              )}\n            />\n            <Route path=\"/projects\" \n              render={(props) => (\n                <ProjectsList {...state}/>\n              )}\n            />\n            <Route path=\"/game-videorank\" \n              render={(props) => (\n                <VideoRank {...state}/>\n              )}\n            />                      \n          </Switch>\n                                \n        </div>         \n      </div>      \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}