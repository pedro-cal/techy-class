{"version":3,"sources":["firebase/firebase.utils.js","components/video-link/video-link.js","config.js","firebase/databaseMethods.js","pages/home/home.js","components/tags-input/tags-input.js","components/students-list/students-list.js","components/class-list/class-list.js","components/header/header.js","components/projects-list/projects-list.js","components/sign-in/sign-in.js","components/sign-up/sign-up.js","pages/login/login.js","pages/enrollment/enrollment.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getUserRefFromDB","signedUser","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","userRole","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","VideoLink","props","toggleVideoListener","getVideosFromDB","videoList","collection","then","querySnapshot","forEach","push","data","setState","addUserNameToVideos","catch","error","dbVideos","state","video","userID","postedBy","getVideo","videoID","videoURLInvalid","fetch","resp","json","items","showPreview","handleChange","e","videoURL","target","value","videoIsDuplicate","GetYoutubeId","where","handleSaveVideo","postedAt","currentUser","id","videoData","operation","number","currentCredits","calc","credits","update","creditsOperation","videoSaved","setTimeout","getUserByID","userData","videoPosters","userName","handleClickLike","handleClickDelete","delete","this","onSnapshot","className","type","name","onChange","onKeyDown","handlePressEnter","placeholder","htmlFor","src","snippet","thumbnails","medium","url","alt","title","onClick","map","i","key","href","rel","React","Component","Home","TagsInput","handleInputChange","tagsInputValue","currentTarget","pushTagToDB","studentId","tagsArray","Labels","handleKeyPress","tagsInput","removeTag","newTags","splice","currentStudent","students","std","ref","c","tag","StudentsList","getUpdatedStudents","updatedStudents","showSearchField","searchField","chosenClass","sort","b","filteredStudents","filter","student","Class","includes","Number","FirstName","LastName","updateStudents","ClassList","handleClassClick","firstChild","innerHTML","stdsInClickedClass","forceUpdate","classes","showStudents","showClassFilter","num","currentClass","totalStudents","size","Header","user","to","signOut","ProjectsList","SignIn","handleSubmit","preventDefault","password","signInWithEmailAndPassword","onSubmit","SignUp","confirmPassword","alert","length","createUserWithEmailAndPassword","code","showError","errorMessage","LogIn","Enrollment","enrollmentCode","school","class","year","classCode","App","toggleAuthMonitor","showEnrollment","stdsSnapshot","dbStudents","onAuthStateChanged","snapshot","path","exact","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19963907.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyB4viqxXXUz96JPMSKv7by8o5hea1ltpVc\",\r\n    authDomain: \"tech-teacher-db.firebaseapp.com\",\r\n    databaseURL: \"https://tech-teacher-db.firebaseio.com\",\r\n    projectId: \"tech-teacher-db\",\r\n    storageBucket: \"tech-teacher-db.appspot.com\",\r\n    messagingSenderId: \"521395870719\",\r\n    appId: \"1:521395870719:web:e282a78b20ffb28f2a25ca\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const getUserRefFromDB = async (signedUser, additionalData) => {\r\n  //The line below was in the course but seems redundant with App.js - AuthMonitor\r\n  /* if (!signedUser) return; */\r\n  //* get signedUser ref and snapshot \r\n  const userRef = firestore.doc(`users/${signedUser.uid}`);\r\n  const userSnapshot = await userRef.get();\r\n\r\n  //* if signedUser is new, send its data to DB \r\n  if(!userSnapshot.exists) {\r\n    const {displayName, email} = signedUser;\r\n    const createdAt = new Date();\r\n    const userRole = '';\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        userRole,\r\n        ...additionalData\r\n      })\r\n    } catch (error) {\r\n      console.log(\"Problem sending User to DB\", error.message)\r\n    }\r\n  }\r\n  return userRef;\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n","import React from 'react';\r\nimport './video-link.css';\r\nimport {firestore} from '../../firebase/firebase.utils';\r\nimport {creditsOperation} from '../../firebase/databaseMethods';\r\n\r\nimport {youtubeKey} from '../../config';\r\nimport GetYoutubeId from 'get-youtube-id';\r\nimport {FaCheck as SaveIcon} from 'react-icons/fa';\r\nimport {FaCoins as DollarIcon} from 'react-icons/fa';\r\nimport {FaThumbsUp as LikeIcon} from 'react-icons/fa';\r\nimport {FaThumbsDown as DislikeIcon} from 'react-icons/fa';\r\nimport {FaTrash as TrashIcon} from 'react-icons/fa';\r\n\r\n//* CLASS COMPONENT DECLARATION \r\nclass VideoLink extends React.Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n      videoURL: \"\",\r\n      videoID: '',\r\n      videoURLInvalid: false,\r\n      videoIsDuplicate: false,\r\n      video: null,\r\n      videoSaved: false,\r\n      showPreview: false,\r\n      videoList: null,\r\n      videoPosters: []\r\n    }    \r\n  }\r\n\r\n  toggleVideoListener = null;\r\n\r\n  //* GET ALL VIDEOS POSTED ON FIREBASE \r\n  getVideosFromDB = () => {\r\n    var videoList = [];\r\n    //* Get stored videos from DB \r\n    firestore.collection('videos').get()\r\n      .then(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          //* pushing videos from DB into array variable \r\n          videoList.push(doc.data());          \r\n        })\r\n      })      \r\n      .then(()=>{        \r\n        this.setState({videoList: videoList},\r\n          () => this.addUserNameToVideos());\r\n      })\r\n      .catch(error => console.error(error)); \r\n  }\r\n\r\n  //* ADD USER NAMES TO VIDEO LIST \r\n  addUserNameToVideos = () => {\r\n    let dbVideos = this.state.videoList;    \r\n    dbVideos.forEach(video => {\r\n      firestore.collection('users').doc(video.userID).get()\r\n            .then(doc => {\r\n              video.postedBy = doc.data().displayName;\r\n            })\r\n            .then(() => {\r\n              this.setState({videoList: dbVideos});\r\n            })\r\n    });\r\n  }  \r\n  \r\n  //* MONITOR FIREBASE VIDEOS COLLECTION \r\n  componentDidMount() {\r\n    this.getVideosFromDB();\r\n\r\n    //* Toggle monitor on Firestore video collection \r\n    this.toggleVideoListener = firestore.collection('videos')\r\n          .onSnapshot(() => this.getVideosFromDB());\r\n  }\r\n  componentWillUnmount() {\r\n    this.toggleVideoListener();\r\n  }\r\n\r\n  //* GET YOUTUBE ID \r\n  getVideo = (videoID) => {    \r\n    if (this.state.videoURLInvalid === false) {\r\n      fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoID}&key=${youtubeKey}`)\r\n        .then(resp => resp.json())\r\n        .then((resp) => {\r\n          this.setState({video: resp.items[0], showPreview: true});\r\n        })        \r\n        .catch(error => console.error(error));\r\n    }      \r\n  } \r\n\r\n  //* VIDEO URL INPUT - handle change and Enter keydown \r\n  handleChange = (e) => {    \r\n    this.setState({videoURL: e.target.value, videoIsDuplicate: false},\r\n      () => {\r\n        const videoID = GetYoutubeId(this.state.videoURL);\r\n        console.log(\"videoID after input change: \", videoID);\r\n      \r\n        //* Validating URL and Get Video Preview \r\n        if (videoID !== null) {      \r\n          this.setState({videoURLInvalid: false, videoID: videoID},\r\n            async () => {\r\n              console.log('videoID in state after validation: ', this.state.videoID);\r\n              //* Checking for duplicate videos \r\n              await firestore.collection('videos').where('videoID', '==', this.state.videoID)\r\n                .get()\r\n                .then((querySnapshot) => {                  \r\n                  querySnapshot.forEach(doc => {\r\n                    if (doc.data().videoID === this.state.videoID) {\r\n                      this.setState({videoIsDuplicate: true});\r\n                    }\r\n                  })                                      \r\n                });\r\n                //* Getting video preview after duplicate checking \r\n                if (!this.state.videoIsDuplicate) {\r\n                  this.getVideo(videoID);\r\n                }\r\n            });        \r\n        } else {\r\n        //* Video URL is invalid \r\n          this.setState({videoURLInvalid: true, showPreview: false});\r\n        }\r\n      });\r\n      \r\n  }  \r\n\r\n  //* SAVE VIDEO TO DB \r\n  handleSaveVideo = () => {\r\n    const postedAt = new Date();\r\n    firestore.collection(\"videos\").doc(this.state.videoID).set({\r\n      userID: this.props.currentUser.id,\r\n      videoURL: this.state.videoURL,\r\n      videoID: this.state.videoID,\r\n      postedAt: postedAt,\r\n      videoData: this.state.video\r\n    })\r\n    .then(() => {\r\n      //* Take 1 credit off of the user \r\n      /* creditsOperation(this.props.currentUser.id, 'remove', 1); */\r\n      creditsOperation(this.props.currentUser.id,'remove',1);\r\n\r\n      //* Inform success, then reset state \r\n      this.setState({videoSaved: true});\r\n      setTimeout(() => this.setState({videoSaved: false, showPreview: false, videoURL:'', video: null}), 5000);      \r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error adding video: \", error);\r\n    });\r\n  }  \r\n\r\n  getUserByID = (userID) => {\r\n    console.log('getUserByID activated');\r\n    var userData;    \r\n    firestore.collection('users').doc(userID).get()\r\n        .then(doc => {\r\n            if (doc.exists) {                \r\n                userData = doc.data();\r\n              }\r\n        })\r\n        .then(() => {\r\n          this.setState({videoPosters:[\r\n            { userID: userID,\r\n              userName: userData.displayName }\r\n          ]}, () => console.log(this.state.videoPosters))\r\n        })\r\n}\r\n\r\n  handleClickLike = (e) => {\r\n  }\r\n\r\n  handleClickDelete = (videoID) => {\r\n    firestore.collection('videos').doc(videoID).delete()\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  render() {   \r\n    var {videoList} = this.state;    \r\n    const currentUser = this.props.currentUser;\r\n    \r\n    return(\r\n      <div className=\"video-box\">\r\n        <h1>Video Ranks</h1>\r\n\r\n        {/* //* VIDEO URL INPUT FIELD */}\r\n        <div className=\"input-box\">                                \r\n          <input type=\"search\" \r\n          name=\"videoURL\" \r\n          value={this.state.videoURL}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handlePressEnter}\r\n          className=\"animated-input\"\r\n          placeholder=\"bla\"/>\r\n          <label className=\"animated-label\" htmlFor=\"videoURL\">Enter Youtube URL</label>\r\n          {/* <button className=\"search-button\" onClick={this.handleSearchClick}><SearchIcon/></button> */}\r\n        </div>      \r\n\r\n        {/*//* VIDEO POSTING BOX */}\r\n\r\n        {/* //* Video Save Confirmation*/}\r\n        {this.state.videoURL && this.state.showPreview ?        \r\n          <div className=\"video-preview\">     \r\n            <img src={this.state.video.snippet.thumbnails.medium.url}\r\n              alt=\"\"\r\n              className=\"video-thumb\"\r\n            />\r\n            <span className=\"preview-title\">Post this video?</span>            \r\n            <h4 className=\"video-title\">{this.state.video.snippet.title}</h4>\r\n            <span onClick={this.handleSaveVideo} className=\"save-icon\">\r\n              {!this.state.videoSaved ? <SaveIcon /> : null}\r\n            </span>\r\n            <span className=\"credits\">\r\n                <DollarIcon/>                                    \r\n                <span>-1</span>\r\n            </span>\r\n          </div>        \r\n        : null}\r\n        \r\n        {/* //* VALIDATION METHODS */}\r\n        {this.state.videoURLInvalid ?\r\n        <div className=\"error-message\">Please paste a valid Youtube Link</div> : null}\r\n\r\n        {this.state.videoIsDuplicate ?\r\n        <div className=\"error-message\">Video already posted. Choose another one.</div> : null}\r\n\r\n        {this.state.videoSaved ?\r\n        <div className=\"success-message\">Video Posted</div> : null}\r\n        \r\n        {/* //* LIST DB VIDEOS */}\r\n        {this.state.videoList !== null ? \r\n          <div className=\"video-card-box\">\r\n            {videoList.map((video, i) => {              \r\n              return (\r\n              <div className=\"video-card\" key={video.videoURL}>                \r\n                <a href={video.videoURL} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img src={video.videoData.snippet.thumbnails.medium.url} \r\n                    alt=\"\"\r\n                    className=\"video-thumb\"\r\n                  />                  \r\n                </a>                \r\n                <div className=\"video-text\">\r\n                  <span className=\"video-title\">{video.videoData.snippet.title}</span>                  \r\n                  <div className=\"video-buttons\">\r\n                    <span className=\"video-icon\">\r\n                      <LikeIcon className=\"like-icon\" onClick={this.handleClickLike}/>\r\n                    </span>\r\n                    <span className=\"video-stats\">\r\n                      325\r\n                    </span>\r\n                    <span className=\"video-icon\">\r\n                      <DislikeIcon className=\"dislike-icon\" onClick={this.handleClickLike}/>\r\n                    </span>\r\n                    <span className=\"video-stats\">\r\n                      23\r\n                    </span>\r\n                    <span className=\"video-label\">                      \r\n                      {video.postedBy}               \r\n                    </span>\r\n                    <span className=\"video-icon\">\r\n                      {video.userID === currentUser.id ? \r\n                      <TrashIcon onClick={() => this.handleClickDelete(video.videoID)}/> : null }\r\n                    </span>\r\n                  </div>                  \r\n                </div>\r\n              </div>\r\n            )})}\r\n          </div> : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default VideoLink;","export const youtubeKey = 'AIzaSyCKKT39Cj300mdznNcTRtDnNwPW3fimUR8';","import {firestore} from './firebase.utils';\r\n\r\n//* A function to perform credits operations \r\nexport const creditsOperation = (userID, operation, number) => {\r\n    const userRef = firestore.collection('users').doc(userID);\r\n    var currentCredits, calc;\r\n    userRef.get().then((doc) => {\r\n        if (doc.exists) {\r\n            currentCredits = doc.data().credits;\r\n            console.log('currentCredits = ', currentCredits);\r\n        }})\r\n        .then(() => {\r\n            switch (operation) {\r\n                case 'add':\r\n                    calc = currentCredits + number;\r\n                    userRef.update({credits: calc});\r\n                    break;\r\n                \r\n                case 'remove':\r\n                    calc = currentCredits - number;\r\n                    console.log('calc after remove operation = ',calc);\r\n                    userRef.update({credits: calc});\r\n                    break;\r\n                default: calc = 0;\r\n            }\r\n        })\r\n}\r\n\r\n//* A function to get a user's data based on their userID \r\nexport const getUserByID = (userID) => {\r\n    console.log('getUserByID activated');\r\n    let userData;\r\n    firestore.collection('users').doc(userID).get()\r\n        .then(doc => {\r\n            if (doc.exists) {                \r\n                userData = doc.data();\r\n                console.log('User data retrieved from Db = ',userData);\r\n            }\r\n        })\r\n    return userData.displayName;\r\n}","import React from 'react';\r\nimport VideoLink from '../../components/video-link/video-link';\r\nimport './home.css';\r\n\r\n/* const Home = () => (\r\n    <div className=\"page-container\">\r\n        Home Page\r\n    </div>\r\n) */\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currentUser: this.props.currentUser\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"page-container\">\r\n                <VideoLink currentUser={this.props.currentUser}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport {firestore} from '../../firebase/firebase.utils';\r\nimport {MdCancel as DeleteIcon} from 'react-icons/md';\r\nimport \"./tags-input-style.css\";\r\n\r\nclass TagsInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tagsInputValue: \"test results\",\r\n            tagsArray: this.props.currentStudent.Labels,\r\n            students: this.props.students,\r\n            studentId: this.props.currentStudent.id,\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let {studentId} = this.state;\r\n        let studentRef = firestore.doc(`students/${studentId}`);\r\n        studentRef.onSnapshot(doc => {\r\n            let std = doc.data();\r\n            this.setState({tagsArray: std.Labels});\r\n        })\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({tagsInputValue: e.currentTarget.value});\r\n   }\r\n\r\n/* \r\n    sendUpdatedStudents = () => {\r\n        this.props.updateStudents(this.state.students);\r\n    } */\r\n\r\n  /*   addTag = (e) => {\r\n        let students = this.state.students;\r\n        let currentStdId = this.state.studentId;\r\n        let currentTags = this.state.tagsArray;\r\n        let inputTag = this.state.tagsInputValue;\r\n        \r\n        this.setState({tagsArray: [...currentTags, inputTag]},\r\n            () => {\r\n                students.map(std => {\r\n                    if (std.id === currentStdId) {\r\n                        std.Labels = this.state.tagsArray;\r\n                    } return students\r\n                });\r\n                this.sendUpdatedStudents();                \r\n            });\r\n        this.tagsInput.value = null;\r\n    } */\r\n\r\n    pushTagToDB = (e) => {\r\n        let {studentId, tagsInputValue, tagsArray} = this.state;\r\n        let studentRef = firestore.doc(`students/${studentId}`);\r\n        studentRef.update({\r\n            Labels: [...tagsArray ,tagsInputValue]\r\n        })\r\n        .then()\r\n        .catch(error => console.error(error));\r\n    }\r\n\r\n    handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\" && e.target.value !== \"\") {\r\n            this.pushTagToDB();\r\n            this.tagsInput.value = null;\r\n        }\r\n    }\r\n\r\n    removeTag = (i) => {\r\n        let {studentId} = this.state;\r\n        let newTags = [...this.state.tagsArray];\r\n        newTags.splice(i,1);\r\n\r\n        let studentRef = firestore.doc(`students/${studentId}`);        \r\n        studentRef.update({Labels: newTags});         \r\n    }\r\n\r\n    render(){\r\n        let tagsArray = this.state.tagsArray;        \r\n        return(\r\n            <div className=\"tags-input-box\">                \r\n                <input type=\"search\"\r\n                className=\"tags-input\"\r\n                placeholder=\"Press 'Enter' to add tags\"\r\n                ref={c => { this.tagsInput = c}}\r\n                onChange={this.handleInputChange}\r\n                onKeyDown={this.handleKeyPress}/>\r\n                <div className=\"tags-box\">\r\n                    {tagsArray.map((tag,i) => (\r\n                        <div className=\"tag\" key={i}>{tag}\r\n                        <span className=\"tag-delete\"\r\n                        onClick={() => this.removeTag(i)}> \r\n                            <DeleteIcon className=\"tag-delete-icon\"/>\r\n                        </span>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TagsInput;","import React, {Component} from 'react';\r\nimport TagsInput from '../tags-input/tags-input';\r\nimport './students-list-style.css';\r\n\r\nclass StudentsList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n        \r\n    this.state = {\r\n      students: this.props.students,\r\n      showSearchField: this.props.showSearchField,\r\n      searchField: \"\",\r\n      chosenClass: this.props.chosenClass      \r\n    }    \r\n  }\r\n\r\n  getUpdatedStudents = (updatedStudents) => {\r\n    this.setState({students: updatedStudents});\r\n  }\r\n\r\n  /* pushToDB = () => {\r\n    let stds = this.state.students;\r\n    \r\n    try {\r\n      stds.forEach(std => {\r\n        firestore.doc(`students/${std.id}`).set({\r\n          ...std\r\n        })\r\n      })      \r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }  */\r\n  \r\n  /* //* Temporary function that allows me to download changes to Students array as a JSON file \r\n  handleDownload = () => {\r\n    const jsonData = this.state.students;\r\n    const fileData = JSON.stringify(jsonData, null, 3);\r\n    const blob = new Blob([fileData], {type: \"text/plain\"});\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.download = 'JSONDownloadTest.json';\r\n    link.href = url;\r\n    link.click();\r\n  } */\r\n  \r\n  render(){\r\n    const students = this.state.students;\r\n    students.sort((a,b) => a.id - b.id);    \r\n\r\n    let filteredStudents = [];\r\n    if (this.props.chosenClass !== \"\") {\r\n      filteredStudents = students.filter(student => \r\n        student.Class.includes(this.props.chosenClass));\r\n    } else {\r\n      filteredStudents = students.filter(student => \r\n        student.Class.includes(this.state.searchField));\r\n    }\r\n    \r\n    return(\r\n      <div className=\"students-list\">\r\n        {/* INPUT BOX TO FILTER STUDENTS */}        \r\n        <div className=\"class-filter-box\">\r\n          <label htmlFor=\"class-filter\" className=\"basic-label\">\r\n            Filtre os alunos pelo número da turma:\r\n          </label> <br/>\r\n          <input \r\n            type=\"search\" \r\n            id=\"class-filter\"\r\n            placeholder=\"Digite o número da turma\"\r\n            onChange={e => {\r\n              this.setState({searchField: e.currentTarget.value});\r\n            }}\r\n          />\r\n        </div>\r\n\r\n       {/*  <div className=\"push-to-db\" onClick={this.pushToDB}>\r\n            <button type='button'>Push Students to DB</button>\r\n          </div> */}\r\n      \r\n       {/*  <button type=\"button\" \r\n        id=\"download-json\"\r\n        onClick={this.handleDownload}>Download JSON</button> */}\r\n\r\n        {/* LIST OF STUDENTS CARDS */}\r\n        <div className = \"cards-list\">          \r\n          {filteredStudents.map(student => (                     \r\n            <div key={student.id} className = \"card-box\">\r\n              <div className=\"card-row-main\">\r\n                <div className = \"card-numbers\">\r\n                  <p className = \"card-class\">{student.Class}</p>\r\n                  <p className = \"card-student-number\">#{student.Number}</p>\r\n                </div>\r\n                <div >\r\n                  <img className=\"card-images\" \r\n                  src={`/images/${student.Class}-${student.Number}.jpg`} \r\n                  alt=\"\"/>\r\n                </div>\r\n                <div className = \"card-names\">\r\n                  <h3>{student.FirstName}</h3>\r\n                  <p className = \"card-last-name\">{student.LastName}</p>\r\n                </div>         \r\n              </div>\r\n              <div className=\"card-row-tags\">\r\n                <TagsInput currentStudent={student} \r\n                students={this.state.students}\r\n                updateStudents = {this.getUpdatedStudents}/>\r\n              </div>                 \r\n            </div>        \r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default StudentsList;","import React, {Component} from 'react';\r\nimport StudentsList from '../students-list/students-list';\r\nimport './class-list-style.css';\r\n\r\nimport {FaUserAlt as StudentIcon} from 'react-icons/fa';\r\n\r\nclass ClassList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes: this.props.classes,\r\n            students: this.props.students,\r\n            filteredStudents: [],\r\n            chosenClass: \"\",\r\n            showStudents: false,\r\n            showClassFilter: false\r\n        }\r\n    }\r\n\r\n  /*   storeFilteredStudents = () => {\r\n        var stdsInClickedClass = [];\r\n        this.state.students.map(student => {            \r\n            if (student.Class === this.state.chosenClass) {\r\n                stdsInClickedClass.push(student);\r\n            } return stdsInClickedClass;\r\n        }); return stdsInClickedClass\r\n        this.setState({filteredStudents: stdsInClickedClass});\r\n\r\n                       \r\n    }; */\r\n\r\n    handleClassClick = (e) => {\r\n        this.setState({chosenClass: e.currentTarget.firstChild.innerHTML},\r\n        () => {\r\n            var stdsInClickedClass = this.state.students.filter(student => {            \r\n                if (student.Class === this.state.chosenClass) {\r\n                    return student;\r\n                } return stdsInClickedClass\r\n            });\r\n            console.log(stdsInClickedClass[0].Class)\r\n            this.setState({filteredStudents: stdsInClickedClass}, () => \r\n            console.log(\"settei filteredStudents\"));\r\n            this.forceUpdate();\r\n            });\r\n    };\r\n\r\n    render(){                \r\n        const classes = this.state.classes;\r\n        const students = this.state.students;\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"class-list\">\r\n                {classes.map((num,i) => {\r\n                    let currentClass = num;\r\n                    let totalStudents = 0;                    \r\n                   return(                    \r\n                    <div className=\"class-card\" \r\n                        key={i}\r\n                        onClick={this.handleClassClick}                   \r\n                    >\r\n                        <div className=\"class-number\">\r\n                            {currentClass}                            \r\n                        </div>\r\n                        <hr/>                        \r\n                        <div className=\"total-students\">\r\n                            {students.forEach((std) => {\r\n                                if (std.Class === currentClass){\r\n                                    totalStudents++;\r\n                                }\r\n                            })}<StudentIcon size={12}/> {totalStudents}\r\n                        </div>                 \r\n                    </div>\r\n                   )\r\n                })}\r\n                </div>\r\n                <div className=\"child-components-box\">\r\n                    \r\n                    {console.log(\"Post-click state.filteredStudents: \"\r\n                     + this.state.filteredStudents)}\r\n\r\n                    {\r\n                        this.state.chosenClass !== \"\" ?\r\n                    <StudentsList students={this.state.students}\r\n                        showClassFilter={this.state.showClassFilter}\r\n                        chosenClass={this.state.chosenClass}/> : null\r\n                    }\r\n                        \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './header.css';\r\n\r\n//* IMPORTING ICONS \r\nimport {FaGraduationCap as ClassesIcon} from 'react-icons/fa';\r\nimport {FaUserAlt as StudentsIcon} from 'react-icons/fa';\r\nimport {FaSignOutAlt as SignOutIcon} from 'react-icons/fa' ;\r\nimport {FaHome as HomeIcon} from 'react-icons/fa' ;\r\nimport {FaCoins as DollarIcon} from 'react-icons/fa';\r\n/* import {FaInfinity as InfiniteIcon} from 'react-icons/fa'; */\r\nimport { auth } from '../../firebase/firebase.utils';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }   \r\n\r\n    render() {\r\n        var user = this.props.currentUser;        \r\n        var userName;      \r\n        if(user !== null) {\r\n            userName = user.displayName;\r\n             \r\n        }\r\n        \r\n        return(                            \r\n            <div className=\"header-box\">\r\n                <div className=\"header-logo\">Techy Class</div>\r\n                <div className=\"burger-menu\">\r\n                    <div className=\"one\"></div>\r\n                    <div className=\"two\"></div>\r\n                    <div className=\"three\"></div>\r\n                </div>\r\n                <nav className=\"nav-box\">\r\n                    <Link className=\"menu-box\" to=\"/\">\r\n                        <div className=\"icon-box\"><HomeIcon /></div>\r\n                        <span className=\"menu-item\">Home</span>\r\n                    </Link>                    \r\n                    <Link className=\"menu-box\" to=\"/classes\">\r\n                        <div className=\"icon-box\"><ClassesIcon /></div>\r\n                        <span className=\"menu-item\">Classes</span>\r\n                    </Link>                    \r\n                    <Link className=\"menu-box\" to=\"/students\">\r\n                        <div className=\"icon-box\"><StudentsIcon /></div>\r\n                        <span className=\"menu-item\">Students</span>\r\n                    </Link>\r\n                    {/*  <Link className=\"menu-box\" to=\"/projects\">\r\n                        <div className=\"icon-box\"><ProjectsIcon /></div>\r\n                        <span className=\"menu-item\">Projects</span>\r\n                    </Link> */}\r\n                </nav>                                    \r\n                <div className=\"sign-in-menu\">\r\n                {this.props.currentUser ?                         \r\n                    <div className=\"user-menu-box\">\r\n                        <span>\r\n                            {`Hello, ${userName}`}\r\n                            {this.props.currentUser.userRole === 'student' ? \r\n                            <span className=\"credits\">\r\n                                <DollarIcon/>                                    \r\n                                <span>{this.props.currentUser.credits}</span>\r\n                            </span>                      \r\n                            :null} \r\n                        </span>\r\n                        <div className=\"sign-out-box\" onClick={() => auth.signOut()}>\r\n                            <span id=\"sign-out-text\">Sign Out</span>\r\n                            <SignOutIcon/>\r\n                        </div>\r\n                    </div> : null\r\n                }\r\n                    {/* <div className=\"sign-in-box\">\r\n                        <Link className=\"sign-in-link\" to=\"/sign-in\">Sign in</Link>\r\n                    </div>                         */}                    \r\n                </div>\r\n            </div>            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './projects-list.css';\r\n\r\nimport {FaPlus as AddIcon} from 'react-icons/fa';\r\n\r\nclass ProjectsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card-list\">\r\n                    <div className=\"card\">\r\n                        <span className=\"icon\"><AddIcon /></span>\r\n                        <p className=\"card-title\">Add Project</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectsList;","import React from 'react';\r\nimport './sign-in.css';\r\n\r\nimport {auth, signInWithGoogle} from '../../firebase/firebase.utils';\r\n\r\nclass SignIn extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',            \r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const {name,value} = e.target;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {email,password} = this.state;\r\n\r\n        await auth.signInWithEmailAndPassword(email,password);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"sign-in-container\">                    \r\n                <div className=\"sign-form-box\">\r\n                    <h2 className=\"sign-subtitle\">I have an account</h2>\r\n                    <form className=\"sign-in-form\" onSubmit={this.handleSubmit} >\r\n                        <div className=\"input-container\">                                \r\n                            <input \r\n                                type=\"email\" \r\n                                name=\"email\"\r\n                                value={this.state.email}\r\n                                onChange={this.handleChange}\r\n                                className=\"sign-in-input\"\r\n                                placeholder=\"bla\"\r\n                            />\r\n                            <label className=\"input-label\" htmlFor=\"email\">your email</label>\r\n                        </div>\r\n                        <div className=\"input-container\">\r\n                            <input \r\n                            type=\"password\" \r\n                            name=\"password\" \r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"password\">your password</label>\r\n                        </div>\r\n                        <button className=\"sign-in-btn\">Sign In</button>\r\n                        <img alt=\"Sign In Wigh Google\" \r\n                        src='./images/google-sign-in/btn_google_signin_dark_normal_web@2x.png' \r\n                        id=\"google-sign-in-btn\"\r\n                        onClick={signInWithGoogle}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport './sign-up.css';\r\n\r\nimport {auth, getUserRefFromDB} from '../../firebase/firebase.utils';\r\n\r\nclass SignUp extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            displayName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            showError: false,\r\n            errorMessage: '',\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const{name,value} = e.target;\r\n        this.setState({[name]: value});\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {displayName,email,password,confirmPassword} = this.state;\r\n\r\n        if (password !== confirmPassword) {\r\n            alert('Passwords do not match. Try again!')\r\n            return;\r\n        }\r\n        if (this.state.password.length < 6) {\r\n            alert('Password should have at least 6 characters')\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const {user} = await auth.createUserWithEmailAndPassword(email,password);            \r\n\r\n            await getUserRefFromDB(user,{displayName});\r\n        } catch (error) {\r\n            console.error(error);\r\n            if(error.code === 'auth/email-already-in-use') {\r\n                this.setState({showError: true,errorMessage:'Email already used. Try to sign in.'})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"sign-up-container\">                    \r\n                <div className=\"sign-form-box\">\r\n                    <h2 className=\"sign-subtitle\">Create a new account</h2>\r\n                    {this.state.showError ? <p className=\"error-message\">{this.state.errorMessage}</p>\r\n                    :null}\r\n                    <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"input-container\">                                \r\n                            <input type=\"text\" \r\n                            name=\"displayName\" \r\n                            value={this.state.displayName}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"first-name\">your user name</label>\r\n                        </div>\r\n                        <div className=\"input-container\">                                \r\n                            <input type=\"email\" \r\n                            name=\"email\" \r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"email\">your email</label>\r\n                        </div>                                \r\n                        <div className=\"input-container\">\r\n                            <input type=\"password\" \r\n                            name=\"password\"\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"password\">create a password</label>\r\n                        </div>\r\n                        <div className=\"input-container\">\r\n                            <input type=\"password\" \r\n                            name=\"confirmPassword\"\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            className=\"sign-in-input\"\r\n                            placeholder=\"bla\"/>\r\n                            <label className=\"input-label\" htmlFor=\"confirm-password\">confirm password</label>\r\n                        </div>\r\n                        <button className=\"sign-in-btn\" >Create Account</button>\r\n                    </form>                   \r\n                </div>\r\n            </div>  \r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from 'react';\r\nimport './login.css';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in';\r\nimport SignUp from '../../components/sign-up/sign-up';\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);        \r\n        this.state = {}\r\n    }   \r\n   \r\n    render() {\r\n        return (\r\n            <div className=\"login-container\">\r\n                <div className=\"logo\">Techy Class</div>\r\n                <div className=\"sign-in-up-container\">\r\n                    <SignIn />\r\n                    <hr className='form-divider'/>\r\n                    <SignUp />\r\n                </div>                                                              \r\n            </div>            \r\n        )\r\n    }\r\n} \r\nexport default LogIn;","import React from 'react';\r\nimport './enrollment.css';\r\n\r\nimport {firestore} from '../../firebase/firebase.utils';\r\n\r\nclass Enrollment extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            enrollmentCode: \"\",\r\n            currentUser: this.props.currentUser\r\n        }        \r\n    }\r\n   \r\n    handleChange = (e) => {\r\n        this.setState({enrollmentCode: e.target.value},\r\n            ()=>console.log(this.state.enrollmentCode));\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const {enrollmentCode,currentUser} = this.state;\r\n        const userRef = firestore.doc(`users/${currentUser.id}`);\r\n        switch(enrollmentCode) {\r\n            case 'emc2020901':\r\n                //case 1\r\n                userRef.update({                    \r\n                    userRole: 'student',\r\n                    school: 'EMC',\r\n                    class: {year: '2020', classCode: '901'}\r\n                })\r\n                .then(() => console.log('User Successfully Enrolled!'))\r\n                .catch(error => console.error(error));\r\n                break;\r\n            case 'emc2020902':\r\n                //case 2\r\n                userRef.update({                    \r\n                    userRole: 'student',\r\n                    school: 'EMC',\r\n                    class: {year: '2020', classCode: '902'}\r\n                })\r\n                .then(() => console.log('User Successfully Enrolled!'))\r\n                .catch(error => console.error(error));\r\n                break;\r\n            default: alert('Code is invalid!');\r\n        }\r\n    }\r\n\r\n    render() {        \r\n        return(\r\n            <div className=\"enrollment-box\">\r\n                <h2 className=\"subtitle\">Type your Enrollment Code:</h2>\r\n                <div className=\"input-container\">                                \r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"enrollmentCode\"\r\n                        value={this.state.enrollmentCode}\r\n                        onChange={this.handleChange}\r\n                        className=\"enrollment-input\"\r\n                        placeholder=\"bla\"\r\n                    />\r\n                    <label className=\"enrollment-label\" htmlFor=\"email\">your code</label>\r\n                </div>\r\n                <button \r\n                    type=\"button\" \r\n                    className=\"submit-btn\"\r\n                    onClick={this.handleSubmit}\r\n                > Submit Code</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Enrollment;","import React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {auth, firestore, getUserRefFromDB} from './firebase/firebase.utils';\nimport './App.css';\n\n//*IMPORTING COMPONENTS \nimport Home from './pages/home/home';\nimport ClassList from './components/class-list/class-list';\nimport StudentsList from './components/students-list/students-list';\nimport Header from './components/header/header';\nimport ProjectsList from './components/projects-list/projects-list';\nimport LogIn from './pages/login/login';\nimport Enrollment from './pages/enrollment/enrollment';\n\n/* //*IMPORTING JSON DATA \nimport emcData2 from './sample-data/emcData2';\n\n//*STORING STUDENTS DATA INTO AN ARRAY ADDING IDs \nvar key = 0;\nconst studentsList = emcData2.map(student => {\n  student.id = key;\n  key++;\n  student.Labels = [];  \n  return student;\n}); */\n\n/* //*READING AND STORING THE AMOUNT OF CLASSES IN STUDENTS DATA INTO classes \nvar classes = [];\nfunction loadClasses(){\n    emcData2.map(student => {\n        if (!classes.includes(student.Class)) {\n            classes.push(student.Class);\n        }\n        return classes;\n    })\n}\nloadClasses(); */\n\n//* DEFINING APP CLASS \nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state = {\n      students: [],\n      classes: [],\n      currentUser: null,\n      userRole: null,\n      showEnrollment: false    \n    };    \n  }\n\n  toggleAuthMonitor = null;\n\n  componentDidMount() {\n        \n    //* GETTING STUDENTS COLLECTION FROM FIRESTORE \n    firestore.collection('students')\n      .get()\n      .then(stdsSnapshot => {\n        const dbStudents = [];\n        stdsSnapshot.forEach(doc => {\n          dbStudents.push(doc.data());          \n        })\n        this.setState({students: dbStudents})\n      });\n\n    //* listen to Auth changes \n    this.toggleAuthMonitor = auth.onAuthStateChanged(async signedUser => {      \n\n      if (signedUser) {        \n        //* 1) send signed user to DB (if it's not there) and get its ref \n        const userRef = await getUserRefFromDB(signedUser);\n\n        //* 2) setState at currentUser as DB data on signedUser \n        userRef.onSnapshot(snapshot => {\n          this.setState({\n            currentUser: {\n              id: snapshot.id,\n              ...snapshot.data()\n            }\n          }, () => {this.setState({userRole: this.state.currentUser.userRole})})\n        });\n                \n      } else {\n        this.setState({currentUser: signedUser});\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.toggleAuthMonitor();\n  } \n\n  render() {\n    var state = this.state;   \n    return (\n      <div className=\"App\">\n        {state.currentUser !== null ?\n          <Header currentUser={state.currentUser}/>\n          :null\n        }                          \n        <div className = \"main-container\">\n          { state.currentUser === null ? <LogIn /> : null}\n          { state.userRole === '' && state.userRole !== null ? \n            <Enrollment currentUser={state.currentUser}/> : null\n          }\n          { state.userRole !== '' && state.userRole !== null ? \n            <Switch>\n              <Route \n                path=\"/\" exact\n                render={(props) => (\n                  <Home {...state} />\n                )}\n              />\n              <Route \n                exact path=\"/classes\"\n                render={(props) => (\n                  <ClassList {...state}/>\n                )}\n              />\n              <Route path=\"/students\" \n                render={(props) => (\n                  <StudentsList {...state} chosenClass={\"\"}/>\n                )}\n              />\n              <Route path=\"/projects\" \n                render={(props) => (\n                  <ProjectsList {...state}/>\n                )}\n              />                      \n            </Switch> : null \n          }                      \n        </div>         \n      </div>      \n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}